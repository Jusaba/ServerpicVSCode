/**
******************************************************
* @file ServerPic.h
* @brief Documentacion de Modulo #Dispositivo# wifi
* @author Julian Salas Bartolome
* @version 1.0
* @date #Fecha#
*******************************************************/

#ifndef SERVERPIC_H
	#define SERVERPIC_H

	//----------------------------------------------
	//Includes Universales
	//----------------------------------------------
	#include <ESP8266WiFi.h>
	#include <WiFiClient.h> 
	#include <ESP8266WebServer.h>
	#include <WiFiUdp.h>
	#include <ArduinoOTA.h>

	#include "Global.h"
	#include "Configuracion.h"
	#include "Eprom.h"
	#include "ModoAP.h"
	#include "ModoSTA.h"
	#include "Servidor.h"

	//----------------------------------------------
	//Includes Particulares
	//----------------------------------------------

	//------------------
	//Hardware Utilizado 
	//------------------	

	
    #define #Placa#

	#ifdef #Placa#
		#define Placa "#Placa#"
		#define Modelo "#Modelo#"
		#define Ino "#Ino#"					
		//------------
		//Pulsador-LED 
		//------------	
		//#define PulsadorLed
		//------------
		//Logica
		//------------	
		#define Logica	1
		//-----------------
		//TiEmpo de rebotes
		//-----------------
 		//#define TempoRebotes 150
	#endif

	
	//----------------------------
	//CARACTERISTICAS DISPOSITIVO
	//----------------------------
	#define VIno "1.0"						//Version del programa principal
	#define VBuild  "1"                     //Numero de compilacion

	//---------------------------------
	//CARACTERISTICAS DE LA COMPILACION
	//---------------------------------
	#define Compiler "VSCode Arduino-Cli";	//Compilador
	#define VCore "#Core#";					//Versi贸n del Core Arduino

	#include "IO.h";



	//----------------------------------------------
	//DEBUG
	//----------------------------------------------
	//#define Debug
	
    //----------------------------------------------
	//HOME KIT
	//----------------------------------------------
	//#define HomeKit
	
    //----------------------------------------------
	//Web Socket
	//----------------------------------------------
	#define WebSocket	
	
    //----------------------------------------------
	//Teimpo de Test de conexion
	//----------------------------------------------
	#define TiempoTest	8000												//Tiempo en milisegundos para Test de conexion a servidor


	//----------------------------------------------
	//Declaracion de funciones Universales
	//----------------------------------------------
	boolean GetDispositivo (void);
	void DispositivoOff (void);
	void DispositivoOn (void);

	//----------------------------------------------
	//Declaracion de funciones Particulares
	//----------------------------------------------

	
	//------------------------------------
	//Declaracion de variables Universales
	//------------------------------------
	ESP8266WebServer server(80);											//Definimos el objeto Servidor para utilizarlo en Modo AP
	WiFiClient Cliente;														//Definimos el objeto Cliente para utilizarlo en Servidor
	Telegrama oMensaje;									 					//Estructura mensaje donde se almacenaran los mensajes recibidos del servidor

	String cSalida;															//Variable donde se deja el estado ( String ) para mandar en mensaje a ServerPic
	boolean lEstado = 0;													//Variable donde se deja el estado del dispositivo para reponer el estado en caso de reconexion
	boolean lConexionPerdida = 0;											//Flag de conexion perdida, se pone a 1 cuando se pierde la conexion. Se utiliza para saber si se ha perdido la conexion para restablecer estado anterior de la perdida


	boolean lHomeKit;													    //Flag para habililtar HomeKit ( 1 Habilitado, 0 deshabilitado )
	boolean lTelegram;														//Flag para habililtar Telegram ( 1 Habilitado, 0 deshabilitado )
	boolean lPush ;															//Flag para habililtar lPush ( 1 Habilitado, 0 deshabilitado )
	boolean lWebSocket ;  													//Flag para habililtar WebSocket ( 1 Habilitado, 0 deshabilitado )
	boolean lEstadisticas;													//Flag para habilitar Estadisticas ( 1 Habilitado, 0 Deshabilitado )
 
	long nMiliSegundosTest = 0;												//Variable utilizada para temporizar el Test de conexion del modulo a ServerPic
	long nMilisegundosRebotes = 0;                							//Variable utilizada para temporizar el tiempo de absorcion de rebotes
	String cDispositivo = String(' ');										//Variable donde se deja el nombre del dsipositivo. Se utiliza para comunicar con HomeKit
	String cPush = String(' ');												//Cliente de push y Telegram
	
	boolean lFlagInterrupcion = 0;                							//Flag para indicar a loop() que ha habido pulsacion


	//------------------------------------
	//Declaracion de variables Particulares
	//------------------------------------



	//Variables donde se almacenan los datos definidos anteriormente para pasarlos a Serverpic.h
	//para mandar la informaci贸n del Hardware y Software utilizados
	//En la libreria ServerPic.h estan definidos como datos externos y se utilizan en la funcion
	//Mensaje () para responder al comando generico #Info.
	//Con ese comando, el dispositivo mandara toda esta informaci贸n al cliente que se lo pida
	// ESTOS DATOS NO SON PARA MODIFICAR POR USUARIO
	//----------------------------
	//Datos del programa principal
	//----------------------------
	String VMain = VIno;
	String Main = Ino; 
	String VModulo = VBuild;
	//----------------------------
	//Datos de compilaci贸n
	//----------------------------	
	String Compilador = Compiler;
	String VersionCore = VCore;

	//----------------------------
	//Datos de Hardware
	//----------------------------	
	String ModeloESP = Modelo;
	String Board = Placa;


	//----------------------------
	//Funciones Universales
	//----------------------------	
	/**
	******************************************************
	* @brief Devielve el estado del dispositivo
	*
	* @return devuelve <b>1</b> si el dispositivo esta conectado o <b>0<\b> en caso de que no este conectado
	*/
	boolean GetDispositivo (void)
	{

    }   
	/**
	******************************************************
	* @brief Pone el dispositivo en On
	*
	*/
	void DispositivoOn (void)
	{

	}
	/**
	******************************************************
	* @brief Pone el dispositivo en OPff
	*
	*/
	void DispositivoOff (void)
	{

	}    

	//----------------------------
	//Funciones Particulares
	//----------------------------	


	

#endif
